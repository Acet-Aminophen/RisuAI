name: Create and publish server Docker image

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
     
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    
      - name: Set environment variables
        shell: bash
        run: |
          GITHUB_REPOSITORY_OWNER_SMALLCASE=$(echo $GITHUB_REPOSITORY_OWNER | tr '[:upper:]' '[:lower:]')
          echo "GITHUB_REPOSITORY_OWNER_SMALLCASE=$GITHUB_REPOSITORY_OWNER_SMALLCASE" >> $GITHUB_ENV
          
          if [[ "${{ github.ref }}" =~ ^refs/heads/ ]]; then
            SHORT_SHA=$(git rev-parse --short "${{ github.sha }}")
            echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          fi

      - name: Update version files for branch builds
        if: startsWith(github.ref, 'refs/heads/')
        shell: bash
        run: |
          # Update appVer in database.svelte.ts
          sed -i "s/export let appVer = \"[^\"]*\"/export let appVer = \"$SHORT_SHA\"/" src/ts/storage/database.svelte.ts
          
          # Update version.json
          echo "{\"version\":\"$SHORT_SHA\"}" > version.json
          
          # Update tauri.conf.json
          sed -i 's/"version": "[^"]*"/"version": "'$SHORT_SHA'"/' src-tauri/tauri.conf.json

      - name: Build Docker images
        shell: bash
        run: |
          if [[ "${{ github.ref }}" =~ ^refs/tags/ ]]; then
            docker build --label "org.opencontainers.image.ref.name=risuai" --label "org.opencontainers.image.version=${{ github.ref_name }}" -t ghcr.io/$GITHUB_REPOSITORY_OWNER_SMALLCASE/risuai:${{ github.ref_name }} -t ghcr.io/$GITHUB_REPOSITORY_OWNER_SMALLCASE/risuai:latest .
          else
            docker build --label "org.opencontainers.image.ref.name=risuai" --label "org.opencontainers.image.version=${{ github.sha }}" -t ghcr.io/$GITHUB_REPOSITORY_OWNER_SMALLCASE/risuai:$SHORT_SHA .
          fi

      - name: Push Docker images
        shell: bash
        run: |
          docker push --all-tags ghcr.io/$GITHUB_REPOSITORY_OWNER_SMALLCASE/risuai